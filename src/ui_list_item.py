# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'frame_pad.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QGraphicsDropShadowEffect, QWidget, QLabel, QScrollArea, QVBoxLayout, QHBoxLayout, QFrame, QPushButton, QSizePolicy, QScrollArea, QListWidgetItem
from PyQt5.QtGui import QPixmap, QIcon, QColor
from PyQt5.QtCore import Qt, QSize, QRect
import os
import pyperclip
class ListItem(QWidget):
    def __init__(self, item_id, parent=None):
        super(ListItem, self).__init__(parent)
        self.id = item_id

        self.frame_padre = QFrame(self)
        self.frame_padre.setFrameShape(QFrame.StyledPanel)
        self.frame_padre.setFrameShadow(QFrame.Raised)
        self.frame_padre.setObjectName("frame_padre")
        self.horizontalLayout = QHBoxLayout(self.frame_padre)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setSpacing(0)
        self.horizontalLayout.setObjectName("horizontalLayout")

        self.frame_info_img = QFrame(self.frame_padre)
        self.frame_info_img.setFrameShape(QFrame.StyledPanel)
        self.frame_info_img.setFrameShadow(QFrame.Raised)
        self.frame_info_img.setObjectName("frame_info_img")
        
        self.frame_info_img.setContentsMargins(0, 0, 0, 0)
         
        self.verticalLayout_2 = QVBoxLayout(self.frame_info_img)
        self.verticalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_2.setSpacing(0)
        self.verticalLayout_2.setObjectName("verticalLayout_2")

        self.info_img = QLabel(self.frame_info_img)
     
        self.info_img.setContentsMargins(0,0,0,0)
        
        self.info_img.setFixedSize(250, 90)
        self.info_img.setAlignment(Qt.AlignHCenter | Qt.AlignTop)
        self.info_img.setObjectName("info_img")
        
        self.verticalLayout_2.addWidget(self.info_img)

        self.nomb_img = QLabel(self.frame_info_img)
        
        self.nomb_img.setContentsMargins(0,0,0,0)
        
        self.nomb_img.setFixedSize(250, 25)

        self.nomb_img.setAlignment(Qt.AlignHCenter | Qt.AlignTop)
        self.nomb_img.setObjectName("nomb_img")
        
        # Establecer el texto del QLabel utilizando el nombre del archivo
        font = self.nomb_img.font()
        font.setPointSize(10)
        self.nomb_img.setFont(font)
        
        self.verticalLayout_2.addWidget(self.nomb_img)

        self.horizontalLayout.addWidget(self.frame_info_img)

        self.frame_area = QFrame(self.frame_padre)
        self.frame_area.setFrameShape(QFrame.StyledPanel)
        self.frame_area.setFrameShadow(QFrame.Raised)
        self.frame_area.setObjectName("frame_area")
        self.horizontalLayout_2 = QHBoxLayout(self.frame_area)
        self.horizontalLayout_2.setContentsMargins(2,2,2,2)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")

        self.area_info = QScrollArea(self.frame_area)
        self.area_info.setContentsMargins(0, 0, 0, 0)
        self.area_info.setFixedSize(530, 110)
        self.area_info.setWidgetResizable(True)
        self.area_info.setObjectName("area_info") 
        # self.area_info.setStyleSheet("background-color: rgba(0, 255, 0, 0.4)")
        
        self.info_text = QLabel()
        self.info_text.setContentsMargins(0,0,0,0)
        self.info_text.setGeometry(QRect(0, 0, 530, 124))
        self.info_text.setObjectName("info_text")
        self.info_text.setWordWrap(True)
        self.info_text.setText("")
        self.info_text.setAlignment(Qt.AlignTop | Qt.AlignLeft)
        self.area_info.setWidget(self.info_text)
        self.horizontalLayout_2.addWidget(self.area_info)


        self.btn_copy = QPushButton(self.frame_area)
        sizePolicy = QSizePolicy(QSizePolicy.Expanding, QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.btn_copy.sizePolicy().hasHeightForWidth())
        self.btn_copy.setSizePolicy(sizePolicy)
        self.btn_copy.setFixedSize(31, 31)

        self.btn_copy.setStyleSheet("background-color: rgba(255, 255, 255, 0)")
        self.btn_copy.setText("")
        icon = QIcon()
        icon.addPixmap(QPixmap("resources/copy.svg"), QIcon.Normal, QIcon.Off)
        self.btn_copy.setIcon(icon)
        self.btn_copy.setIconSize(QSize(24, 24))
        self.btn_copy.setObjectName("btn_copy")

        self.horizontalLayout_2.addWidget(self.btn_copy)

        self.horizontalLayout.addWidget(self.frame_area)

        self.verticalLayout = QVBoxLayout(self)
        self.verticalLayout.addWidget(self.frame_padre)
        
        self.setup_key_shortcuts_list()
        
    # ----------------------------- Botones ----------------------------- #
    def setup_key_shortcuts_list(self):  
        self.btn_copy.clicked.connect(lambda: self.copy_content())
        self.btn_copy.pressed.connect(lambda: self.apply_shadow_effect_list())
        self.btn_copy.released.connect(lambda: self.remove_shadow_effect_list())
        self.btn_copy.setEnabled(False)
        
        
    def apply_shadow_effect_list(self):
        # Crear un QGraphicsDropShadowEffect
        shadow = QGraphicsDropShadowEffect()
        shadow.setBlurRadius(5) # El radio de desenfoque corresponde al tercer valor en box-shadow
        shadow.setOffset(0, 0) # Los dos primeros valores en box-shadow son el desplazamiento horizontal y vertical de la sombra
        shadow.setColor(QtGui.QColor(26, 44, 50, 191)) # El Ãºltimo valor en box-shadow es el color de la sombra. En este caso, es rojo con una opacidad de 0.75. QColor toma valores de opacidad de 0 a 255, por lo que multiplicamos 0.75 por 255 para obtener el valor correcto.
        # Aplicar el efecto de sombra al QFrame
        self.btn_copy.setGraphicsEffect(shadow)
    
    def remove_shadow_effect_list(self):
        self.btn_copy.setGraphicsEffect(None)
    
    
    def copy_content(self):        
        text_to_copy = self.info_text.text()
        pyperclip.copy(text_to_copy)
        self.info_text.setTextInteractionFlags(Qt.TextSelectableByMouse)  # Permite seleccionar y copiar el texto